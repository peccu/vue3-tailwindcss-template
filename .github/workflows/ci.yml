name: CI

on:
  push:

jobs:
  unit_test:
    name: 'Unit Tests'
    runs-on: ubuntu-latest

    # strategy:
    #   matrix:
    #     node-version: [16.x, 18.x]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      # https://bun.sh/guides/runtime/cicd
      - name: Install bun
        uses: oven-sh/setup-bun@v1
      # run any `bun` or `bunx` command
      - name: Install dependencies
        run: bun install
      - name: unit test
        run: bun run test:unit
      # - name: e2e test
      #   run: bun run test:e2e
      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ matrix.node-version }}
      #     cache: 'npm'
      # - run: npm ci
      # - run: npm run build --if-present
      # - run: npm test

  # Playwright Tests
  # output report
  # need to preview with npx playwright show-report name-of-my-extracted-playwright-report
  html_report:
    name: 'Playwright Tests : report to html'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: oven-sh/setup-bun@v1
    - name: Install dependencies
      run: bun install
    - name: Build
      run: bun run build
    - name: Install Playwright Browsers
      run: bunx playwright install --with-deps
    - name: Run Playwright tests
      run: bunx playwright test --update-snapshots
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  # output to github
  # use container
  github_report:
    name: 'Playwright Tests : report to github'
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.38.0-jammy
    steps:
      - uses: actions/checkout@v3
      - name: install unzip
        run: apt-get update && apt-get install -y unzip && rm -rf /var/lib/apt/lists/*
      - uses: oven-sh/setup-bun@v1
      - name: Install dependencies
        run: bun install
      - name: Build
        run: bun run build
      - name: Install Playwright Browsers
        run: bunx playwright install msedge && bunx playwright install chrome
      - name: Run your tests
        run: HOME=/root GITHUB_REPORT=1 bunx playwright test --update-snapshots

  # https://qiita.com/hedrall/items/e5507dbec5429c69616f
  dependency_cruise:
    naem: 'Dependency Cruiser'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: oven-sh/setup-bun@v1
      - name: Install dependencies
        run: bun install
      - name: 1. dependency-cruiserを実行する
        run: depcruise --config .dependency-cruiser.js -T json > result.json
      - name: 2. 結果を標準出力する
        run: depcruise-fmt -T err result.json
      - name: 3. Markdown出力用のファイルを作成し、タイトルを書き込む
        run: echo '# dependency-cruiserによる依存関係分析結果' > comment.md
      - name: 4. 結果をMarkdowでファイルに書き込む
        run: depcruise-fmt -T markdown >> comment.md
      - name: 5. find-commentを利用して、既存の自動コメントがあれば置き換えます
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: dependency-cruiserによる依存関係分析結果
      - name: 6. コメントを投稿する
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body-file: comment.md
          edit-mode: replace
          token: ${{ secrets.GITHUB_TOKEN }}
